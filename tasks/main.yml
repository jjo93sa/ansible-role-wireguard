---
- name: Gather instance facts
  setup:

- include_tasks: "setup-{{ ansible_distribution|lower }}.yml"

- name: Install WireGuard
  package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - wireguard-dkms
    - wireguard-tools
  tags:
    - wg-install
    - skip_ansible_lint

- name: Open ports in iptables
  iptables_raw:
    name: wireguard_open_port
    state: '{{ wireguard_open_port | ternary("present", "absent") }}'
    rules: '-A INPUT -p udp --dport {{ wireguard_open_port }} -j ACCEPT'
  tags: iptables


- name: Enable WireGuard kernel module
  modprobe:
    name: wireguard
    state: present
  register: wireguard_module_enabled
  until:  wireguard_module_enabled is succeeded
  retries: 10
  delay: 10
  failed_when: wireguard_module_enabled is failure
  tags:
    - wg-install

- name: Set local path to key files
  set_fact:
    local_key_file_path: "{{ wireguard_cert_directory }}/{{ inventory_hostname }}"
  tags:
    wg-generate-keys

- name: Create local WireGuard certificates directory
  file:
    dest: "{{ local_key_file_path }}"
    state: directory
    owner: "{{ wireguard_cert_owner }}"
    group: "{{ wireguard_cert_group }}"
    mode: 0700
  run_once: true
  delegate_to: localhost
  tags:
    wg-generate-keys

- name: Set WireGuard IP (without mask)
  set_fact:
    wireguard_ip: "{{ wireguard_address.split('/')[0] }}"

- name: Generate WireGuard server private key
  shell: "wg genkey"
  register: wg_private_key_result
  tags:
    - wg-generate-keys
    - skip_ansible_lint

- name: Set private server key fact
  set_fact:
    wg_private_key: "{{ wg_private_key_result.stdout }}"
  tags:
    - wg-generate-keys

- name: Generate WireGuard server public key
  shell: "echo '{{ wg_private_key }}' | wg pubkey"
  register: wg_public_key_result
  tags:
    - wg-generate-keys

- name: Set server public key fact
  set_fact:
    wg_public_key: "{{ wg_public_key_result.stdout }}"
  tags:
    - wg-generate-keys

- name: Generate WireGuard clients private key
  shell: "wg genkey"
  register: wg_client_private_keys_result
  with_items:
    - "{{ wireguard_client_list }}"
  tags:
    - wg-generate-keys
    - skip_ansible_lint

- name: Create client private keys dictionary
  set_fact:
      wg_client_private_keys_dict: "{{ wg_client_private_keys_dict|default({}) | combine( {item.item.name: item.stdout} ) }}"
  with_items: "{{ wg_client_private_keys_result.results }}"

- name: Generate WireGuard clients public key
  shell: "echo '{{ item.value }}' | wg pubkey"
  register: wg_client_public_keys_result
  with_dict:
    - "{{ wg_client_private_keys_dict }}"
  tags:
    - wg-generate-keys

- name: Create client public keys dictionary
  set_fact:
      wg_client_public_keys_dict: "{{ wg_client_public_keys_dict|default({}) | combine( {item.item.key: item.stdout} ) }}"
  with_items: "{{ wg_client_public_keys_result.results }}"

- name: Create WireGuard server configuration directory
  file:
    dest: "{{ wireguard_remote_directory }}"
    state: directory
    mode: 0700
  tags:
    - wg-config

- name: Generate WireGuard server configuration file
  template:
    src: wg.conf.j2
    dest: "{{ wireguard_remote_directory }}/{{ wireguard_interface }}.conf"
    owner: root
    group: root
    mode: 0600
  tags:
    - wg-config
  notify:
    - restart wireguard

- name: Generate WireGuard client configuration files
  template:
    src: client.j2
    dest: "{{ wireguard_remote_directory }}/{{ item.name }}.conf"
    owner: root
    group: root
    mode: 0600
  with_items:
    - "{{ wireguard_client_list }}"
  tags:
    - wg-config
  notify:
    - restart wireguard

- name: Generate WireGuard client qr files
  shell: "qrencode -o {{ wireguard_remote_directory }}/{{ item.name }}.png -t png < {{ wireguard_remote_directory }}/{{ item.name }}.conf"
  with_items:
    - "{{ wireguard_client_list }}"
  tags:
    - wg-config

- name: Copy server and client files to local
  synchronize:
    mode: pull
    use_ssh_args: yes
    src: "{{ wireguard_remote_directory }}/"
    dest: "{{ local_key_file_path }}"
  tags:
    - wg-config

- name: Start and enable WireGuard service
  service:
    name: "wg-quick@{{ wireguard_interface }}"
    state: started
    enabled: yes
